{"ast":null,"code":"// frontend/src/api/taskApi.js\nimport api from \"./api\";\n\n// Get user tasks\nexport const getUserTasks = async () => {\n  try {\n    const response = await api.get(\"/tasks\");\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n  }\n};\n\n// Get task by ID\nexport const getTaskById = async id => {\n  try {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n};\n\n// Create new task\nexport const createTask = async taskData => {\n  try {\n    const response = await api.post(\"/tasks\", taskData);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n  }\n};\n\n// Update task\nexport const updateTask = async (id, taskData) => {\n  try {\n    const response = await api.put(`/tasks/${id}`, taskData);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n  }\n};\n\n// Delete task\nexport const deleteTask = async id => {\n  try {\n    const response = await api.delete(`/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error;\n  }\n};\n\n// Get tasks for a specific employee (Supervisor/Manager/HR only)\nexport const getEmployeeTasks = async employeeId => {\n  try {\n    const response = await api.get(`/tasks/employee/${employeeId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error;\n  }\n};\n\n// Mark task as completed\nexport const completeTask = async id => {\n  try {\n    const response = await api.put(`/tasks/${id}`, {\n      isCompleted: true\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error;\n  }\n};\n\n// Mark task as incomplete\nexport const uncompleteTask = async id => {\n  try {\n    const response = await api.put(`/tasks/${id}`, {\n      isCompleted: false\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error;\n  }\n};","map":{"version":3,"names":["api","getUserTasks","response","get","data","error","_error$response","getTaskById","id","_error$response2","createTask","taskData","post","_error$response3","updateTask","put","_error$response4","deleteTask","delete","_error$response5","getEmployeeTasks","employeeId","_error$response6","completeTask","isCompleted","_error$response7","uncompleteTask","_error$response8"],"sources":["C:/Users/zebi9/Desktop/imp/pmi_ft_amine/frontend/src/api/taskApi.js"],"sourcesContent":["// frontend/src/api/taskApi.js\r\nimport api from \"./api\";\r\n\r\n// Get user tasks\r\nexport const getUserTasks = async () => {\r\n  try {\r\n    const response = await api.get(\"/tasks\");\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get task by ID\r\nexport const getTaskById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/tasks/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Create new task\r\nexport const createTask = async (taskData) => {\r\n  try {\r\n    const response = await api.post(\"/tasks\", taskData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Update task\r\nexport const updateTask = async (id, taskData) => {\r\n  try {\r\n    const response = await api.put(`/tasks/${id}`, taskData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Delete task\r\nexport const deleteTask = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/tasks/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get tasks for a specific employee (Supervisor/Manager/HR only)\r\nexport const getEmployeeTasks = async (employeeId) => {\r\n  try {\r\n    const response = await api.get(`/tasks/employee/${employeeId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Mark task as completed\r\nexport const completeTask = async (id) => {\r\n  try {\r\n    const response = await api.put(`/tasks/${id}`, { isCompleted: true });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Mark task as incomplete\r\nexport const uncompleteTask = async (id) => {\r\n  try {\r\n    const response = await api.put(`/tasks/${id}`, { isCompleted: false });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}