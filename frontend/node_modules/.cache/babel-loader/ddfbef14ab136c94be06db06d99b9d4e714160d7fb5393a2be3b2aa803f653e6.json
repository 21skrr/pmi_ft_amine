{"ast":null,"code":"// frontend/src/api/onboardingApi.js\nimport api from \"./api\";\n\n// Get onboarding progress for a user\nexport const getOnboardingProgress = async userId => {\n  try {\n    const response = await api.get(`/onboarding/${userId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n  }\n};\n\n// Update onboarding progress (HR/Supervisor only)\nexport const updateOnboardingProgress = async (userId, progressData) => {\n  try {\n    const response = await api.put(`/onboarding/${userId}`, progressData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n};\n\n// Get onboarding metrics (HR only)\nexport const getOnboardingMetrics = async () => {\n  try {\n    const response = await api.get(\"/onboarding/metrics\");\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n  }\n};","map":{"version":3,"names":["api","getOnboardingProgress","userId","response","get","data","error","_error$response","updateOnboardingProgress","progressData","put","_error$response2","getOnboardingMetrics","_error$response3"],"sources":["C:/Users/zebi9/Desktop/imp/pmi_ft_amine/frontend/src/api/onboardingApi.js"],"sourcesContent":["// frontend/src/api/onboardingApi.js\r\nimport api from \"./api\";\r\n\r\n// Get onboarding progress for a user\r\nexport const getOnboardingProgress = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/onboarding/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Update onboarding progress (HR/Supervisor only)\r\nexport const updateOnboardingProgress = async (userId, progressData) => {\r\n  try {\r\n    const response = await api.put(`/onboarding/${userId}`, progressData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get onboarding metrics (HR only)\r\nexport const getOnboardingMetrics = async () => {\r\n  try {\r\n    const response = await api.get(\"/onboarding/metrics\");\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,MAAM,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,eAAeF,MAAM,EAAE,CAAC;IACvD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK;EACrC;AACF,CAAC;;AAED;AACA,OAAO,MAAME,wBAAwB,GAAG,MAAAA,CAAON,MAAM,EAAEO,YAAY,KAAK;EACtE,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,GAAG,CAAC,eAAeR,MAAM,EAAE,EAAEO,YAAY,CAAC;IACrE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAIC,KAAK;EACrC;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAO,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI,KAAIC,KAAK;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}